version: '3.8'

services:
  nest-backend:
    container_name: nest-app
    image: nest-api
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 5001:5000
    env_file:
      - .env.prod
    networks:
      - backend_network
    volumes:
      - logs:/usr/src/app/logs
      - tempfiles:/usr/src/app/temp
    depends_on:
      - nginx-proxy
      - postgres
      - redis

  redis:
    container_name: redis-db
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    env_file:
      - .env.prod
    ports:
      - 16379:6379
    networks:
      - backend_network
    volumes:
      - redis:/data

  postgres:
    container_name: postgres-db
    image: postgres:15
    ports:
      - 15432:5432
    env_file:
      - .env.prod
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/dbDumpFile:/dbDumpFile

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    env_file:
      - .env.prod
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    networks:
      - backend_network

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-companion
    env_file:
      - .env.prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    depends_on:
      - nginx-proxy

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: {}
  redis:
    driver: local
  certs:
  vhostd:
  html:
  logs:
  tempfiles:
